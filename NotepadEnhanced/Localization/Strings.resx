<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AlphaDownload" xml:space="preserve">
    <value>The version you are downloading is in alpha and may be a bit unstable.</value>
  </data>
  <data name="CmsiExitText" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="CmsiShowText" xml:space="preserve">
    <value>Show</value>
  </data>
  <data name="FilterOpenFile" xml:space="preserve">
    <value>Text|*.txt|Batch|*.bat|Config|*.ini|Web|*.html;*.htm;*.css|Source|*.c;*.cpp;*.cs;*.java;*.h|Info|*.inf;*.nfo|All|*.*</value>
  </data>
  <data name="FilterSaveFile" xml:space="preserve">
    <value>Text file|*.txt|Other File|*.*</value>
  </data>
  <data name="ItemsReplaced" xml:space="preserve">
    <value>Item(s) replaced</value>
  </data>
  <data name="MsgAddTabPrompt" xml:space="preserve">
    <value>Press Ctrl+T to quickly add a blank document</value>
  </data>
  <data name="MsgBetaDownload" xml:space="preserve">
    <value>Note: The version you are downloading is in beta and may have a few bugs.</value>
  </data>
  <data name="MsgBigFile" xml:space="preserve">
    <value>is a big file,
do you want to open it anyway?</value>
  </data>
  <data name="MsgCoundNotRetrieveData" xml:space="preserve">
    <value>Could not retrieve data from update page!
You can check manually on developers site</value>
  </data>
  <data name="MsgDeleteConfirmation" xml:space="preserve">
    <value>Do you really want to permanently delete the active document?</value>
  </data>
  <data name="MsgDeleteError" xml:space="preserve">
    <value>Could not delete file, the file may be in use elsewhere or you may not have permission to do this.</value>
  </data>
  <data name="MsgDownloadLinkErrorMsg" xml:space="preserve">
    <value>Could not navigate to download location</value>
  </data>
  <data name="MsgNewVersion" xml:space="preserve">
    <value>A newer version is available, click OK to download.</value>
  </data>
  <data name="MsgNoPrinter" xml:space="preserve">
    <value>No valid printer found!</value>
  </data>
  <data name="MsgSaveFile" xml:space="preserve">
    <value>Would you like to save changes to "{0}"?</value>
  </data>
  <data name="MsgUpdateInfoError" xml:space="preserve">
    <value>Unable to find valid update info, sorry for the inconvenience!</value>
  </data>
  <data name="MsgUpToDate" xml:space="preserve">
    <value>Your version of {0} is up to date!</value>
  </data>
  <data name="MultiDocsName" xml:space="preserve">
    <value>Multiple Documents</value>
  </data>
  <data name="NewDoc" xml:space="preserve">
    <value>New Text Document</value>
  </data>
  <data name="NoFileFound" xml:space="preserve">
    <value>No file found</value>
  </data>
  <data name="UndoText" xml:space="preserve">
    <value>Undo </value>
  </data>
  <data name="Unknown" xml:space="preserve">
    <value>Unknown</value>
  </data>
  <data name="RestartPrompt" xml:space="preserve">
    <value>For the changes to take effect, the application must restart. 
Would you like to do this now?

Note: Open documents will be discarded without prompt</value>
  </data>
  <data name="RestoreSessionPrompt" xml:space="preserve">
    <value>Restore Last Session</value>
  </data>
  <data name="LanguageReport" xml:space="preserve">
    <value>Please report any typos to the developer</value>
  </data>
  <data name="ChangedOutsideEditor" xml:space="preserve">
    <value>Has been changed outside the editor.
Would you like to reload the document?</value>
  </data>
  <data name="RefactexErrorFormat" xml:space="preserve">
    <value>An error occurred with {0}'s regex pattern</value>
  </data>
  <data name="SettingsReset" xml:space="preserve">
    <value>Your settings seemed to be corrupted and were reset.</value>
  </data>
  <data name="NoSelRefactex" xml:space="preserve">
    <value>Please select a refactor profile first</value>
  </data>
  <data name="SettingsRestored" xml:space="preserve">
    <value>Settings have been restored to default</value>
  </data>
  <data name="NoDefFound" xml:space="preserve">
    <value>No definition found.</value>
  </data>
</root>